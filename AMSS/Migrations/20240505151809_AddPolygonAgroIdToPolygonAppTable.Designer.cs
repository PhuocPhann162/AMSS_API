// <auto-generated />
using System;
using AMSS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AMSS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240505151809_AddPolygonAgroIdToPolygonAppTable")]
    partial class AddPolygonAgroIdToPolygonAppTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AMSS.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AMSS.Models.Crop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CropTypeId")
                        .HasColumnType("int");

                    b.Property<double>("CultivatedArea")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FieldId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PlantedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CropTypeId");

                    b.HasIndex("FieldId");

                    b.ToTable("Crops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CropTypeId = 1,
                            CultivatedArea = 891.0,
                            Description = "High-yielding rice variety suitable for wetland cultivation.",
                            ExpectedDate = new DateTime(2024, 8, 3, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5556),
                            FieldId = 7,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Rice.jpg",
                            Name = "Rice Crop 1",
                            PlantedDate = new DateTime(2024, 4, 5, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5533),
                            Quantity = 500
                        },
                        new
                        {
                            Id = 2,
                            CropTypeId = 1,
                            CultivatedArea = 900.20000000000005,
                            Description = "High-yielding rice variety suitable for wetland cultivation.",
                            ExpectedDate = new DateTime(2024, 8, 8, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5561),
                            FieldId = 3,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Rice.jpg",
                            Name = "Rice Crop 2",
                            PlantedDate = new DateTime(2024, 3, 21, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5560),
                            Quantity = 400
                        },
                        new
                        {
                            Id = 3,
                            CropTypeId = 2,
                            CultivatedArea = 667.70000000000005,
                            Description = "Maize crop known for its versatility and use in various food products.",
                            ExpectedDate = new DateTime(2024, 8, 13, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5564),
                            FieldId = 5,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Corn.jpg",
                            Name = "Corn Crop 1",
                            PlantedDate = new DateTime(2024, 4, 15, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5563),
                            Quantity = 700
                        },
                        new
                        {
                            Id = 4,
                            CropTypeId = 2,
                            CultivatedArea = 292.30000000000001,
                            Description = "Maize crop known for its versatility and use in various food products.",
                            ExpectedDate = new DateTime(2024, 8, 18, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5608),
                            FieldId = 6,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Corn.jpg",
                            Name = "Corn Crop 2",
                            PlantedDate = new DateTime(2024, 3, 31, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5608),
                            Quantity = 600
                        },
                        new
                        {
                            Id = 5,
                            CropTypeId = 5,
                            CultivatedArea = 729.39999999999998,
                            Description = "Starchy tuberous crop widely consumed as a staple food.",
                            ExpectedDate = new DateTime(2024, 9, 12, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5613),
                            FieldId = 3,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Potato.jpg",
                            Name = "Potato Crop 1",
                            PlantedDate = new DateTime(2024, 4, 25, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5612),
                            Quantity = 1000
                        },
                        new
                        {
                            Id = 6,
                            CropTypeId = 5,
                            CultivatedArea = 834.0,
                            Description = "Starchy tuberous crop widely consumed as a staple food.",
                            ExpectedDate = new DateTime(2024, 9, 17, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5616),
                            FieldId = 6,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Potato.jpg",
                            Name = "Potato Crop 2",
                            PlantedDate = new DateTime(2024, 4, 10, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5615),
                            Quantity = 900
                        },
                        new
                        {
                            Id = 7,
                            CropTypeId = 6,
                            CultivatedArea = 662.39999999999998,
                            Description = "Versatile crop used in various culinary dishes and sauces, rich in vitamins and minerals.",
                            ExpectedDate = new DateTime(2024, 9, 22, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5619),
                            FieldId = 5,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Tomato.jpg",
                            Name = "Tomato Crop 1",
                            PlantedDate = new DateTime(2024, 4, 30, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5618),
                            Quantity = 1100
                        },
                        new
                        {
                            Id = 8,
                            CropTypeId = 6,
                            CultivatedArea = 389.0,
                            Description = "Versatile crop used in various culinary dishes and sauces, rich in vitamins and minerals.",
                            ExpectedDate = new DateTime(2024, 9, 27, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5621),
                            FieldId = 6,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Tomato.jpg",
                            Name = "Tomato Crop 2",
                            PlantedDate = new DateTime(2024, 4, 15, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5621),
                            Quantity = 1000
                        },
                        new
                        {
                            Id = 9,
                            CropTypeId = 7,
                            CultivatedArea = 732.10000000000002,
                            Description = "Popular fruit crop known for its crisp texture and sweet flavor, cultivated in orchards worldwide.",
                            ExpectedDate = new DateTime(2024, 10, 2, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5624),
                            FieldId = 3,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Apple.jpg",
                            Name = "Apple Crop 1",
                            PlantedDate = new DateTime(2024, 5, 10, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5623),
                            Quantity = 1200
                        },
                        new
                        {
                            Id = 10,
                            CropTypeId = 7,
                            CultivatedArea = 424.60000000000002,
                            Description = "Popular fruit crop known for its crisp texture and sweet flavor, cultivated in orchards worldwide.",
                            ExpectedDate = new DateTime(2024, 10, 7, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5628),
                            FieldId = 7,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Apple.jpg",
                            Name = "Apple Crop 2",
                            PlantedDate = new DateTime(2024, 4, 25, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5627),
                            Quantity = 1100
                        },
                        new
                        {
                            Id = 11,
                            CropTypeId = 8,
                            CultivatedArea = 293.39999999999998,
                            Description = "Tropical fruit crop with high nutritional value, grown in warm climates and consumed worldwide.",
                            ExpectedDate = new DateTime(2024, 10, 12, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5630),
                            FieldId = 5,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Banana.jpg",
                            Name = "Banana Crop 1",
                            PlantedDate = new DateTime(2024, 5, 15, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5630),
                            Quantity = 1300
                        },
                        new
                        {
                            Id = 12,
                            CropTypeId = 8,
                            CultivatedArea = 444.5,
                            Description = "Tropical fruit crop with high nutritional value, grown in warm climates and consumed worldwide.",
                            ExpectedDate = new DateTime(2024, 10, 17, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5633),
                            FieldId = 3,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Banana.jpg",
                            Name = "Banana Crop 2",
                            PlantedDate = new DateTime(2024, 4, 30, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5632),
                            Quantity = 1200
                        },
                        new
                        {
                            Id = 13,
                            CropTypeId = 9,
                            CultivatedArea = 920.10000000000002,
                            Description = "Citrus fruit crop prized for its tangy flavor and high vitamin C content, cultivated in orchards.",
                            ExpectedDate = new DateTime(2024, 10, 22, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5636),
                            FieldId = 6,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Orange.jpg",
                            Name = "Orange Crop 1",
                            PlantedDate = new DateTime(2024, 5, 20, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5635),
                            Quantity = 1400
                        },
                        new
                        {
                            Id = 14,
                            CropTypeId = 9,
                            CultivatedArea = 349.5,
                            Description = "Citrus fruit crop prized for its tangy flavor and high vitamin C content, cultivated in orchards.",
                            ExpectedDate = new DateTime(2024, 10, 27, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5639),
                            FieldId = 7,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Orange.jpg",
                            Name = "Orange Crop 2",
                            PlantedDate = new DateTime(2024, 5, 5, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5639),
                            Quantity = 1300
                        },
                        new
                        {
                            Id = 15,
                            CropTypeId = 10,
                            CultivatedArea = 542.0,
                            Description = "Fruit crop grown in vineyards, used for making wine, juices, and various culinary products.",
                            ExpectedDate = new DateTime(2024, 11, 1, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5642),
                            FieldId = 5,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Grape.jpg",
                            Name = "Grapes Crop 1",
                            PlantedDate = new DateTime(2024, 5, 25, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5641),
                            Quantity = 1500
                        },
                        new
                        {
                            Id = 16,
                            CropTypeId = 10,
                            CultivatedArea = 1300.3,
                            Description = "Fruit crop grown in vineyards, used for making wine, juices, and various culinary products.",
                            ExpectedDate = new DateTime(2024, 11, 6, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5645),
                            FieldId = 6,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Grape.jpg",
                            Name = "Grapes Crop 2",
                            PlantedDate = new DateTime(2024, 5, 10, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5644),
                            Quantity = 1400
                        },
                        new
                        {
                            Id = 17,
                            CropTypeId = 11,
                            CultivatedArea = 1250.5999999999999,
                            Description = "Tropical fruit crop known for its sweet and tangy flavor, grown in tropical regions worldwide.",
                            ExpectedDate = new DateTime(2024, 11, 11, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5647),
                            FieldId = 3,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Pineapple.jpg",
                            Name = "Pineapple Crop 1",
                            PlantedDate = new DateTime(2024, 5, 30, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5647),
                            Quantity = 1600
                        },
                        new
                        {
                            Id = 18,
                            CropTypeId = 11,
                            CultivatedArea = 1332.5999999999999,
                            Description = "Tropical fruit crop known for its sweet and tangy flavor, grown in tropical regions worldwide.",
                            ExpectedDate = new DateTime(2024, 11, 16, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5650),
                            FieldId = 6,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Pineapple.jpg",
                            Name = "Pineapple Crop 2",
                            PlantedDate = new DateTime(2024, 5, 15, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5649),
                            Quantity = 1500
                        },
                        new
                        {
                            Id = 19,
                            CropTypeId = 12,
                            CultivatedArea = 1330.5,
                            Description = "Small fruit crop with a sweet flavor, often grown in gardens and commercial fields for fresh consumption.",
                            ExpectedDate = new DateTime(2024, 11, 21, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5652),
                            FieldId = 5,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Strawberry.jpg",
                            Name = "Strawberry Crop 1",
                            PlantedDate = new DateTime(2024, 6, 4, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5652),
                            Quantity = 1700
                        },
                        new
                        {
                            Id = 20,
                            CropTypeId = 12,
                            CultivatedArea = 1232.7,
                            Description = "Small fruit crop with a sweet flavor, often grown in gardens and commercial fields for fresh consumption.",
                            ExpectedDate = new DateTime(2024, 11, 26, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5655),
                            FieldId = 7,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Strawberry.jpg",
                            Name = "Strawberry Crop 2",
                            PlantedDate = new DateTime(2024, 5, 20, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5654),
                            Quantity = 1600
                        },
                        new
                        {
                            Id = 21,
                            CropTypeId = 13,
                            CultivatedArea = 756.39999999999998,
                            Description = "Caffeinated beverage crop cultivated in tropical regions, harvested for its seeds (coffee beans).",
                            ExpectedDate = new DateTime(2024, 12, 1, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5658),
                            FieldId = 5,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Coffee.jpg",
                            Name = "Coffee Crop 1",
                            PlantedDate = new DateTime(2024, 6, 9, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5657),
                            Quantity = 1800
                        },
                        new
                        {
                            Id = 22,
                            CropTypeId = 13,
                            CultivatedArea = 842.10000000000002,
                            Description = "Caffeinated beverage crop cultivated in tropical regions, harvested for its seeds (coffee beans).",
                            ExpectedDate = new DateTime(2024, 12, 6, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5660),
                            FieldId = 3,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Coffee.jpg",
                            Name = "Coffee Crop 2",
                            PlantedDate = new DateTime(2024, 5, 25, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5660),
                            Quantity = 1700
                        },
                        new
                        {
                            Id = 23,
                            CropTypeId = 15,
                            CultivatedArea = 542.29999999999995,
                            Description = "Bean crop used in chocolate production, cultivated in tropical regions within 20 degrees of the equator.",
                            ExpectedDate = new DateTime(2024, 12, 21, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5664),
                            FieldId = 6,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Cocoa.jpg",
                            Name = "Cocoa Crop 1",
                            PlantedDate = new DateTime(2024, 6, 19, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5663),
                            Quantity = 2000
                        },
                        new
                        {
                            Id = 24,
                            CropTypeId = 15,
                            CultivatedArea = 638.60000000000002,
                            Description = "Bean crop used in chocolate production, cultivated in tropical regions within 20 degrees of the equator.",
                            ExpectedDate = new DateTime(2024, 12, 26, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5667),
                            FieldId = 5,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Cocoa.jpg",
                            Name = "Cocoa Crop 2",
                            PlantedDate = new DateTime(2024, 6, 4, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5666),
                            Quantity = 1900
                        },
                        new
                        {
                            Id = 25,
                            CropTypeId = 16,
                            CultivatedArea = 447.69999999999999,
                            Description = "Legume crop grown for its edible seeds, rich in protein and healthy fats, cultivated in sandy soils.",
                            ExpectedDate = new DateTime(2024, 12, 31, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5670),
                            FieldId = 7,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Peanut.jpg",
                            Name = "Peanut Crop 1",
                            PlantedDate = new DateTime(2024, 6, 24, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5669),
                            Quantity = 2100
                        },
                        new
                        {
                            Id = 26,
                            CropTypeId = 16,
                            CultivatedArea = 1140.4000000000001,
                            Description = "Legume crop grown for its edible seeds, rich in protein and healthy fats, cultivated in sandy soils.",
                            ExpectedDate = new DateTime(2025, 1, 5, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5672),
                            FieldId = 5,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Peanut.jpg",
                            Name = "Peanut Crop 2",
                            PlantedDate = new DateTime(2024, 6, 9, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5672),
                            Quantity = 2000
                        },
                        new
                        {
                            Id = 27,
                            CropTypeId = 17,
                            CultivatedArea = 346.89999999999998,
                            Description = "Root vegetable crop known for its bright orange color and high beta-carotene content, grown in cool climates.",
                            ExpectedDate = new DateTime(2025, 1, 10, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5676),
                            FieldId = 6,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Carrot.jpg",
                            Name = "Carrot Crop 1",
                            PlantedDate = new DateTime(2024, 6, 29, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5674),
                            Quantity = 2200
                        },
                        new
                        {
                            Id = 28,
                            CropTypeId = 17,
                            CultivatedArea = 342.60000000000002,
                            Description = "Root vegetable crop known for its bright orange color and high beta-carotene content, grown in cool climates.",
                            ExpectedDate = new DateTime(2025, 1, 15, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5679),
                            FieldId = 3,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Carrot.jpg",
                            Name = "Carrot Crop 2",
                            PlantedDate = new DateTime(2024, 6, 14, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5678),
                            Quantity = 2100
                        },
                        new
                        {
                            Id = 29,
                            CropTypeId = 18,
                            CultivatedArea = 748.10000000000002,
                            Description = "Nutrient-rich vegetable crop belonging to the brassica family, known for its green flowering heads.",
                            ExpectedDate = new DateTime(2025, 1, 20, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5682),
                            FieldId = 7,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Brocolli.jpg",
                            Name = "Broccoli Crop 1",
                            PlantedDate = new DateTime(2024, 7, 4, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5681),
                            Quantity = 2300
                        },
                        new
                        {
                            Id = 30,
                            CropTypeId = 18,
                            CultivatedArea = 844.0,
                            Description = "Nutrient-rich vegetable crop belonging to the brassica family, known for its green flowering heads.",
                            ExpectedDate = new DateTime(2025, 1, 25, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5684),
                            FieldId = 5,
                            Icon = "https://amssimages.blob.core.windows.net/agriculture/Brocolli.jpg",
                            Name = "Broccoli Crop 2",
                            PlantedDate = new DateTime(2024, 6, 19, 22, 18, 8, 903, DateTimeKind.Local).AddTicks(5684),
                            Quantity = 2200
                        });
                });

            modelBuilder.Entity("AMSS.Models.CropType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CropTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "RC",
                            Name = "Rice"
                        },
                        new
                        {
                            Id = 2,
                            Code = "CN",
                            Name = "Corn"
                        },
                        new
                        {
                            Id = 3,
                            Code = "SB",
                            Name = "Soybean"
                        },
                        new
                        {
                            Id = 4,
                            Code = "SC",
                            Name = "Sugarcane"
                        },
                        new
                        {
                            Id = 5,
                            Code = "PT",
                            Name = "Potato"
                        },
                        new
                        {
                            Id = 6,
                            Code = "TM",
                            Name = "Tomato"
                        },
                        new
                        {
                            Id = 7,
                            Code = "AP",
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 8,
                            Code = "BN",
                            Name = "Banana"
                        },
                        new
                        {
                            Id = 9,
                            Code = "OR",
                            Name = "Orange"
                        },
                        new
                        {
                            Id = 10,
                            Code = "GP",
                            Name = "Grapes"
                        },
                        new
                        {
                            Id = 11,
                            Code = "PL",
                            Name = "Pineapple"
                        },
                        new
                        {
                            Id = 12,
                            Code = "SBY",
                            Name = "Strawberry"
                        },
                        new
                        {
                            Id = 13,
                            Code = "CF",
                            Name = "Coffee"
                        },
                        new
                        {
                            Id = 14,
                            Code = "TE",
                            Name = "Tea"
                        },
                        new
                        {
                            Id = 15,
                            Code = "CC",
                            Name = "Cocoa"
                        },
                        new
                        {
                            Id = 16,
                            Code = "PN",
                            Name = "Peanut"
                        },
                        new
                        {
                            Id = 17,
                            Code = "CR",
                            Name = "Carrot"
                        },
                        new
                        {
                            Id = 18,
                            Code = "BK",
                            Name = "Broccoli"
                        });
                });

            modelBuilder.Entity("AMSS.Models.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolygonAppId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("PolygonAppId")
                        .IsUnique();

                    b.ToTable("Farms");
                });

            modelBuilder.Entity("AMSS.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolygonAppId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PolygonAppId")
                        .IsUnique();

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("AMSS.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Lat")
                        .HasColumnType("real");

                    b.Property<float?>("Lng")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("AMSS.Models.Polygon.PolygonApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolygonAgroId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PolygonApps");
                });

            modelBuilder.Entity("AMSS.Models.Polygon.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Lat")
                        .HasColumnType("real");

                    b.Property<int?>("PolygonAppId")
                        .HasColumnType("int");

                    b.Property<float>("lng")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PolygonAppId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AMSS.Models.Crop", b =>
                {
                    b.HasOne("AMSS.Models.CropType", "CropType")
                        .WithMany("Crops")
                        .HasForeignKey("CropTypeId");

                    b.HasOne("AMSS.Models.Field", "Field")
                        .WithMany("Crops")
                        .HasForeignKey("FieldId");

                    b.Navigation("CropType");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("AMSS.Models.Farm", b =>
                {
                    b.HasOne("AMSS.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("AMSS.Models.Polygon.PolygonApp", "PolygonApp")
                        .WithOne("Farm")
                        .HasForeignKey("AMSS.Models.Farm", "PolygonAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("PolygonApp");
                });

            modelBuilder.Entity("AMSS.Models.Field", b =>
                {
                    b.HasOne("AMSS.Models.Farm", "Farm")
                        .WithMany("Fields")
                        .HasForeignKey("FarmId");

                    b.HasOne("AMSS.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("AMSS.Models.Polygon.PolygonApp", "PolygonApp")
                        .WithOne("Field")
                        .HasForeignKey("AMSS.Models.Field", "PolygonAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");

                    b.Navigation("Location");

                    b.Navigation("PolygonApp");
                });

            modelBuilder.Entity("AMSS.Models.Polygon.Position", b =>
                {
                    b.HasOne("AMSS.Models.Polygon.PolygonApp", "PolygonApp")
                        .WithMany("Positions")
                        .HasForeignKey("PolygonAppId");

                    b.Navigation("PolygonApp");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AMSS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AMSS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMSS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AMSS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AMSS.Models.CropType", b =>
                {
                    b.Navigation("Crops");
                });

            modelBuilder.Entity("AMSS.Models.Farm", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("AMSS.Models.Field", b =>
                {
                    b.Navigation("Crops");
                });

            modelBuilder.Entity("AMSS.Models.Polygon.PolygonApp", b =>
                {
                    b.Navigation("Farm")
                        .IsRequired();

                    b.Navigation("Field")
                        .IsRequired();

                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
